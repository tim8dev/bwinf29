\section{Aufgabe 4: ``Drehzahl''}
\subsection{L\"osungsidee}
Um nach dem Würfeln einer Zahl, die optimale Entscheidung zu treffen, wird für jede Möglichkeit Karten zu streichen, die erwartete Höchstpunktzahl berechnet. Es wird diejenige Streichung ausgewählt, von der die maximale Punktzahl erwartet wird.
\paragraph{Das Berechnen der Höchstpunktzahl erfolgt rekursiv:}
\textbf{\\begin}
\begin{algorithmic}
\FORALL{Zahl z $\gets$ Würfelbare Zahlen}
 \IF{Zahl z nicht aus Karten streichbar}
   \STATE Punktzahl ist Summe der Kartenbeträge \COMMENT{Rekursionsschluss}
 \ELSE
  \FORALL{Streichmöglichkeit s $\gets$ Streichmöglichkeiten für die Zahl z}
   \STATE Kartensatz k $\gets$ Kartensatz nach Streichen der Streichmöglichkeit s
   \STATE Berechne die Punktzahl des Kartensatzes k \COMMENT{Rekursiver Aufruf}
  \ENDFOR
  \STATE Punktzahl ist das Maximum der zuvor berechneten Punktzahlen
 \ENDIF
 \STATE Die gewichtete Punktzahl ist die soeben errechnete Punktzahl mal die Wahrscheinlichkeit der Zahl z.
\ENDFOR
\STATE Addiere alle gewichteten Punktzahlen
\end{algorithmic}
\textbf{end}

\paragraph*{Mit diesem Algorithmus lässt sich nun die Entscheidung wie folgt berechnen:}
\textbf{\\begin}
\begin{algorithmic}
\STATE Zahl z ist die gewürfelte Zahl
\IF{Zahl z nicht aus Karten streichbar}
  \STATE Gewonnen mit Punktzahl p $\gets$ Summe der Kartenbeträge
\ELSE
 \FORALL{Streichmöglichkeit s $\gets$ Streichmöglichkeiten für die Zahl z}
  \STATE Kartensatz k $\gets$ Kartensatz nach Streichen der Streichmöglichkeit s
  \STATE Berechne die Punktzahl des Kartensatzes k \COMMENT{mit Hilfe des oben beschriebenem Algorithmus'}
 \ENDFOR
 \STATE Entscheidung fällt für die Streichmöglichkeit mit der höchsten Punktzahl
\ENDIF
\end{algorithmic}
\textbf{end}

\subsection{Programm-Dokumentation}

\paragraph{Maximale Punktzahl}
Durch den Algorithmus zur Berechnung der Höchstpunktzahl wurde der Wert \emph{24,34456} ausgerechnet.
Im Experiment (1000-maliges Ausführen von OptimalSpiel, siehe unten) wurde der Wert \emph{23,646} empirisch berechnet,
dies ergibt eine Differenz von lediglich \emph{0,69856}.

\subsection{Programm-Ablaufprotokoll}
\paragraph{Ablauf eines ``OptimalSpieles''}
Ein sogenanntes OptimalSpiel ist ein protokolliertes Spiel des Computers. Hier wird der oben beschriebene Algorithmus zur Entscheidungsfindung verwendet.
\lstset{language=Scala}
\begin{lstlisting}
OptimalSpiel startet.
Karten sind: [1|2|3|4|5|6|7|8|9]
Gewürfelt wurde 6
 => Streichmöglichkeiten: [1|2|3],[1|5],[2|4],[6]
Es wird [1|2|3] gestrichen (erwartete Punktzahl: 24,24562492590899)

Karten sind: [4|5|6|7|8|9]
Gewürfelt wurde 6
 => Streichmöglichkeiten: [6]
Es wird [6] gestrichen (erwartete Punktzahl: 24,316367550678248)

Karten sind: [4|5|7|8|9]
Gewürfelt wurde 8
 => Streichmöglichkeiten: [8]
Es wird [8] gestrichen (erwartete Punktzahl: 19,45130315500686)

Karten sind: [4|5|7|9]
Gewürfelt wurde 2
Keine Streichmöglichkeit!

Spielende! - Es wurden 25 Punkte erreicht!
\end{lstlisting}

\subsection{Programm-Text}
Der inhaltlich interessante Code Aufgabe4/src/tau/tim/drehzahl/Karten.scala:
\lstset{language=Scala}
\lstset{basicstyle=\footnotesize}
\lstinputlisting{../Aufgabe4/src/tau/tim/drehzahl/Karten.scala}
\subsection{Programm}
% Include Scala lib!
Der Code ist ausfürbar auf der CD mitgeliefert. \\
Das Programm kann durch folgenden Befehl aus der Kommandozeile ausgeführt werden (Voraussetzungen siehe \ref{Vor}):
'java -jar Aufgabe4/dist/Drehzahl.jar'.